const bel = require('bel')
const csjs = require('csjs-inject')
// Widgets
const Graphic = require('Graphic')
const Rellax = require('rellax')

module.exports = SmartcontractUI

function SmartcontractUI () {
    const css = styles
    let island = Graphic(css.island, './src/node_modules/assets/svg/floating-island.svg')
    let energyIsland = Graphic(css.energyIsland, './src/node_modules/assets/svg/energy-island.svg')
    let tree = Graphic(css.tree, './src/node_modules/assets/svg/single-tree.svg')
    let stone = Graphic(css.stone, './src/node_modules/assets/svg/stone.svg')
    let cloud1 = Graphic(css.cloud1, './src/node_modules/assets/svg/cloud.svg')
    let cloud2 = Graphic(css.cloud2, './src/node_modules/assets/svg/cloud.svg')
    let cloud3 = Graphic(css.cloud3, './src/node_modules/assets/svg/cloud.svg')
    let cloud4 = Graphic(css.cloud4, './src/node_modules/assets/svg/cloud.svg')
    let cloud5 = Graphic(css.cloud5, './src/node_modules/assets/svg/cloud.svg')
    let button = bel`<button class=${css.button}>Get started</button>`

    // Parallax effects
    window.addEventListener('load', ()=>{
        // let contentRellax = new Rellax(`.${css.content}`, { speed: 3})
        // let energyIslandRellax = new Rellax( energyIsland, { speed: 4})
        // let sceneRellax = new Rellax( `.${css.scene}`, { speed: 3.2})
        let cloud1Rellax = new Rellax( cloud1, { speed: 2})
        let cloud2Rellax = new Rellax( cloud2, { speed: 3})
        let cloud3Rellax = new Rellax( cloud3, { speed: 4})
        let cloud4Rellax = new Rellax( cloud4, { speed: 4})
        let cloud5Rellax = new Rellax( cloud5, { speed: 3})
    })
    
    button.addEventListener('click', ()=>{
        window.open('https://ethereum-play.github.io/editor-solidity/', '_blank')
    })

    let el = bel`
    <section id="smartcontractUI" class="${css.section}">
        <div class="${css.content}">
            <h2 class=${css.subTitle}>Smart Contract UI</h2>
            <article class=${css.article}>Ethereum IDE plugin for hackable Atom editor. Compile smart contracts, deploy them to Ethereum networks. Efficient contract management interface. Integrated test suite for smart contracts.</article>
            ${button}
        </div>
        <div class=${css.scene}>
            <div class=${css.objects}>
                <img class=${css.logo} src="https://ethereum-play.github.io/editor-solidity/assets/logo.png" alt="Smart contract UI logo">
                <img class=${css.screenshot} src="./src/node_modules/assets/images/smart-contract-ui.jpg" alt="Smart contract UI">
                <div class=${css.deco}>
                    ${stone}
                    ${tree}
                </div>
            </div>
            ${island}
        </div>
        ${energyIsland}
        ${cloud1}
        ${cloud2}
        ${cloud3}
        ${cloud4}
        ${cloud5}
    </section>
    `
    return el
}

const styles = csjs`
.section {
    position: relative;
    display: grid;
    grid-template-rows: auto 1fr;
    grid-template-columns: 40% 60%;
    background-image: linear-gradient(0deg, var(--section2BgGEnd), var(--section2BgGStart));
    padding: 5vw 2vw;
}
.content {
    position: relative;
    z-index: 9;
    grid-row-start: 1;
    grid-column-start: 1;
    grid-column-end: 2;
    text-align: center;
    padding: 0 5%;
    margin-bottom: 86px;
}
.subTitle {
    font-family: var(--titleFont);
    font-size: var(--subTitleSize);
    color: var(--section2TitleColor);
    margin-bottom: 2.5rem;
}
.article {
    
}
.button {
    background-image: linear-gradient(0deg, #4dc7be, #35bdb9);
}
.scene {
    position: relative;
    grid-row-start: span 2;
    grid-column-start: 2;
}
.objects {
    position: relative;
}
.screenshot {
    width: 80%;
    margin-bottom: -5.5%;
    margin-left: 10%;
}
.logo {
    position: absolute;
    left: 0%;
    bottom: -20%;
    width: 20%;
}
.deco {
    position: absolute;
    right: 0;
    bottom: -18.5%;
    width: 100%;
    display: flex;
    align-items: flex-end;
    justify-content: flex-end;
}
.tree {
    width: 13%;
}
.stone {
    position: relative;
    width: 10%;
    right: -3%;
}
.island {
}
.energyIsland {
    grid-row-start: 2;
    grid-column-start: 1;
    grid-column-end: 2;
    width: 80%;
    justify-self: center;
}
.cloud1 {
    position: absolute;
    width: 10vw;
    left: 2vw;
    bottom: 0;
    z-index: 3;
}
.cloud2 {
    position: absolute;
    width: 15vw;
    left: 38vw;
    bottom: -35vw;
    z-index: 2;
}
.cloud3 {
    position: absolute;
    width: 8vw;
    right: 30vw;
    bottom: -34vw;
    z-index: 3;
}
.cloud4 {
    position: absolute;
    width: 14vw;
    right: 6vw;
    bottom: -40vw;
    z-index: 3;
}
.cloud5 {
    position: absolute;
    width: 8vw;
    right: 2vw;
    bottom: -10vw;
    z-index: 2;
}
@media screen and (max-width: 1024px) {
    .content {
        grid-row-start: 1;
        grid-column-end: 3;
    }
    .scene {
        grid-row-start: 2;
    }
    .energyIsland {
        align-self: end;
    }
}
@media screen and (max-width: 640px) {
    .scene {
        grid-column-start: 1;
        grid-column-end: 3;
    }
    .energyIsland {
        grid-row-start: 3;
        grid-column-start: 1;
        grid-column-end: 3;
        width: 60%;
        justify-self: start;
    }
    .cloud1 {
        width: 16vw;
    }
    .cloud2 {
        width: 20vw;
        left: 50vw;
        bottom: 10vw;
    }
    .cloud3 {
        width: 15vw;
        bottom: 50vw;
    }
    .cloud4 {
        width: 25vw;
        bottom: -15vw;
    }
    .cloud5 {
        width: 15vw;
        bottom: 30vw;
    }
}
@media screen and (max-width: 414px) {
    .subTitle {
        font-size: var(--titlesSizeS);
        margin-bottom: 1.5rem;
    }
}
`