const bel = require('bel')
const csjs = require('csjs-inject')
// Widgets
const Graphic = require('Graphic')

module.exports = SmartcontractCodes

function SmartcontractCodes () {
    const css = styles
    let island = Graphic(css.island, './src/node_modules/assets/svg/floating-island1.svg')
    let islandMiddle = Graphic(css.islandMiddle, './src/node_modules/assets/svg/floating-island2.svg')
    let islandRight = Graphic(css.islandRight, './src/node_modules/assets/svg/floating-island2.svg')
    let blossom = Graphic(css.blossom, './src/node_modules/assets/svg/blossom-tree.svg')
    let tree = Graphic(css.tree, './src/node_modules/assets/svg/single-tree.svg')
    let trees = Graphic(css.trees, './src/node_modules/assets/svg/two-trees.svg')
    let stone = Graphic(css.stone, './src/node_modules/assets/svg/stone.svg')
    let smallStone = Graphic(css.smallStone, './src/node_modules/assets/svg/small-stone.svg')
    let button = bel`<button class=${css.button}>Get started</button>`

    button.addEventListener('click', ()=>{
        window.open('https://smartcontract.codes/', '_blank')
    })

    let el = bel`
    <section id="smartcontractCodes" class="${css.section}">
        <div class="${css.content}">
            <h2 class=${css.subTitle}>Smart contract codes</h2>
            <article class=${css.article}>From Parity Ethereum, the most advanced Ethereum client, to Polkadot, the next-generation interoperable blockchain network. Parity builds the cutting edge of Web 3.0.</article>
            ${button}
        </div>
        <div class=${css.scene}>
            <div class=${css.deco}>
                <img class=${css.logo} src="https://smartcontract.codes/src/assets/images/logo-1.png" alt="Smart contract codes logo">
                <img class=${css.screenshot} src="./src/node_modules/assets/images/smart-contract-codes.jpg" alt="Smart contract codes">
                ${trees}
            </div>
            ${island}
        </div>
        <div class=${css.sceneMedium}>
            <div class=${css.deco1}>
                <div class=${css.container}>
                    ${smallStone}
                    ${stone}
                    ${blossom}
                </div>
                ${islandMiddle}
            </div>
            <div class=${css.deco2}>
                ${tree}
                ${islandRight}
            </div>
        </div>
        
    </section>
    `

    return el
}

const styles = csjs`
.section {
    position: relative;
    display: grid;
    grid-template-rows: auto 1fr;
    grid-template-columns: 60% 40%;
    background-image: linear-gradient(0deg, var(--section3BgGEnd), var(--section3BgGStart));
    padding: 3vw 2vw 0 2vw;
}
.content {
    position: relative;
    z-index: 9;
    grid-row-start: 1;
    grid-column-start: 2;
    grid-column-end: 3;
    text-align: center;
    padding: 0 5%;
}
.subTitle {
    font-family: var(--titleFont);
    font-size: var(--subTitleSize);
    color: var(--section3TitleColor);
    margin-top: 0;
    margin-bottom: 2.5rem;
}
.article {
    
}
.button {
    background-image: linear-gradient(0deg, #900df8, #ac1cf6);
}
.scene {
    grid-row-start: span 2;
    grid-column-start: 1;
}
.deco {
    position: relative;
}
.screenshot {
    width: 65%;
    margin-left: 15%;
    margin-bottom: -6%;
}
.trees {
    position: absolute;
    right: 10%;
    bottom: -20%;
    width: 15%;
}
.logo {
    position: absolute;
    left:6%;
    bottom: -20%;
    width: 15%;
}
.island {
}
.sceneMedium {
    grid-row-start: 2;
    grid-column-start: 2;
    display: grid;
    grid-template: 1fr / 65% 35%;
    align-items: center;
}
.container {
    position: relative;
}
.deco1 {
    position: relative;
    width: 80%;
    justify-self: center;
}
.deco2 {

}
.blossom {
    width: 55%;
    margin: 0  0 -10% 12%;
}
.islandMiddle {

}
.tree {
    position: relative;
    width: 50%;
    margin: 0 auto;
    margin-bottom: -11%;
    z-index: 2;
}
.islandRight {
    
}
.stone {
    position: absolute;
    right: 12%;
    bottom: 3%;
    width: 22%;
}
.smallStone {
    position: absolute;
    left: 7%;
    bottom: 5%;
    width: 14%;
}
@media screen and (min-width: 2561px) {
    .subTitle {
        font-size: calc(var(--subTitleSize) * 1.5);
    }
    .tree {
        margin-bottom: -10.5%;
    }
}
@media screen and (min-width: 4096px) {
    .subTitle {
        font-size: calc(var(--subTitleSize) * 2.25);
    }
}
@media screen and (max-width: 1024px) {
    .content {
        grid-column-start: 1;
        margin-bottom: 60px;
    }
}
@media screen and (max-width: 640px) {
    .scene {
        grid-row-start: 2;
        grid-column-end: 3; 
    }
    .sceneMedium {
        grid-row-start: 3;
        grid-column-start: 1;
        grid-column-end: 3;
    }
    .deco1 {
        width: 90%;
    }
    .deco2 {
        width: 80%;
        justify-self: center;
        align-self: center;
    }
    .tree {
        bottom: -5.5%;
    }
}
@media screen and (max-width: 414px) {
    .subTitle {
        font-size: var(--titlesSizeS);
        margin-bottom: 1.5rem;
    }
}
`